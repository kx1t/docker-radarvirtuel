name: Deploy to GHCR

on:
  # Build and deploy the image on pushes to main branch
  workflow_dispatch:
    inputs:
      reason:
        required: true
        description: "Reason for running this workflow"
  # Build and deploy the image on pushes to master branch
  push:
    branches:
      - master
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy_dockerhub_multiarch:
    name: Deploy to GHCR (Multi-Arch)
    runs-on: ubuntu-latest

    # Set job-wide environment variables
    #  - REPO: repo name on dockerhub
    #  - IMAGE: image name on dockerhub

    steps:

      # Check out our code
      -
        name: Checkout
        uses: actions/checkout@v2

      # Set up QEMU for multi-arch builds
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # # Log into GHCR (so we can push images)
      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up buildx for multi platform builds
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build & Push ghcr.io/sdr-enthusiasts/docker-radarvirtuel:latest
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          no-cache: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/sdr-enthusiasts/docker-radarvirtuel:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy_dockerhub_single_arch:
    name: Deploy to GHCR
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker-platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7

    steps:

      # Check out our code
      -
        name: Checkout
        
        uses: actions/checkout@v2

      # Set up QEMU for multi-arch builds
      -
        name: Set up QEMU
        
        uses: docker/setup-qemu-action@v1

      # # Log into GHCR (so we can push images)
      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up buildx for multi platform builds
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Get archictecture suffix
      -
        name: Get image architecture suffix
        run: |
          echo "ARCH_TAG=$(echo '${{ matrix.docker-platform }}' | cut -d '/' -f2- | tr -s '/' '_')" >> $GITHUB_ENV

      # Show archictecture suffix
      -
        name: Show image architecture suffix
        run: |
          echo "Architecture suffix: ${{ env.ARCH_TAG }}"

      - name: Build & Push ghcr.io/sdr-enthusiasts/docker-radarvirtuel:latest arch
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          no-cache: true
          platforms: ${{ matrix.docker-platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/sdr-enthusiasts/docker-radarvirtuel:latest_${{ env.ARCH_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
