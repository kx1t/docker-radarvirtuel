#!/command/with-contenv bash
# shellcheck shell=bash disable=SC1091,SC2015,SC2145,SC2154

#---------------------------------------------------------------------------------------------
# Copyright (C) 2023-2024, Ramon F. Kolb (kx1t) and contributors
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
#---------------------------------------------------------------------------------------------

source /scripts/common

"${s6wrap[@]}" echo "Initializing mlat-client..."

MLAT_FLAG="/run/mlat-down"
MAX_TRIES=5
RETRY_INTERVAL=15

rm -f "$MLAT_FLAG"

# Source in the scripts from @Mikenye's healthchecks-framework so we can use them here
source /opt/healthchecks-framework/healthchecks.sh

MLAT_INPUT_TYPE="${MLAT_INPUT_TYPE:-auto}"
MLAT_RESULTS="${MLAT_RESULTS:-beast,listen,30105}"
MLAT_HOST="${MLAT_HOST:-${SOURCE_HOST%%:*}:30005}"

# Check: see if the parameters are correctly configured
if [[ -z "${LAT}" ]] || [[ -z "${LON}" ]] || [[ -z "${ALT}" ]]; then
    "${s6wrap[@]}" cat <<EOF
-------------------------------------------------------------------
ATTENTION RADARVIRTUEL USERS!
Please update your docker-compose.yml with MLAT parameters.
This is a NEW FEATURE and we encourage you to use it!

Here's how: add the following parameter to the environment section of
radarvirtuel:

    - LAT=42.123456789                          # This is your station latitude
    - LON=-71.123456789                         # This is your station longtude
    - ALT=40ft                                  # This is your antenna altitude above the ellipoid (MSL) - use "ft" for feet or "m" for meters

Please reach out to kx1t (at) amsat.org with any support questions"
-------------------------------------------------------------------"
MLAT will not start: not or incorrectly configured"
EOF
    touch "$MLAT_FLAG"
    exit 0
fi

# Check: see if MLAT source host can be reached. Note - this may fail a few times if the source container is started in parallel with the
# RV container
MLAT_OK=""
for (( i=1; i<=MAX_TRIES; i++ ))
do
  if [[ $(timeout --preserve-status 10 netcat -z -v "${MLAT_HOST%%:*}" "${MLAT_HOST##*:}" 2>/dev/null ; echo $?) != "0" ]]
  then
    "${s6wrap[@]}" echo "-------------------------------------------------------------------"
    "${s6wrap[@]}" echo "Attempt $i/$MAX_TRIES: MLAT source host ${MLAT_HOST} cannot be reached. Trying again in $RETRY_INTERVAL seconds."
    sleep ${RETRY_INTERVAL}
  else
    MLAT_OK=true
    i="$((MAX_TRIES + 1 ))"
    if chk_enabled "${VERBOSE}"; then
      "${s6wrap[@]}" echo "---------------------------------------------------------------"
      "${s6wrap[@]}" echo "MLAT source host checked. Connection can be established at ${MLAT_HOST}"
    fi
  fi
done
if [[ "$MLAT_OK" != "true" ]]
then
  "${s6wrap[@]}" echo "-------------------------------------------------------------------"
  "${s6wrap[@]}" echo "MLAT will not start: cannot reach MLAT source host ${MLAT_HOST} after $MAX_TRIES"
  echo "temp" > "$MLAT_FLAG"
  exit 0
fi

# update the MLAT_SERVER from the ZoneTable script:
source /home/zonetable
MLAT_SERVER="${zone_mlat:-${MLAT_SERVER}}"
MLAT_SERVER="${MLAT_SERVER:-mlat.adsbnetwork.com:50000}"

# Check: see if remote MLAT server can be reached
MLAT_OK=""
for (( i=1; i<="${MAX_TRIES}"; i++ ))
do
  if [[ $(timeout --preserve-status 10 netcat -z -v "${MLAT_SERVER%%:*}" "${MLAT_SERVER##*:}" 2>/dev/null ; echo $?) != "0" ]]
  then
    "${s6wrap[@]}" echo "-------------------------------------------------------------------"
    "${s6wrap[@]}" echo "Attempt $i/$MAX_TRIES: MLAT server ${MLAT_SERVER} cannot be reached. Trying again in $RETRY_INTERVAL seconds."
    sleep "${RETRY_INTERVAL}"
  else
    MLAT_OK="true"
    i="$((MAX_TRIES + 1))"
    if chk_enabled "${VERBOSE}"; then
      "${s6wrap[@]}" echo "---------------------------------------------------------------"
      "${s6wrap[@]}" echo "Remote MLAT server checked. Connection can be established at ${MLAT_SERVER}"
    fi
  fi
done
if [[ "$MLAT_OK" != "true" ]]; then
  "${s6wrap[@]}" echo "-------------------------------------------------------------------"
  "${s6wrap[@]}" echo "MLAT will not start: cannot reach MLAT server ${MLAT_HOST} after $MAX_TRIES"
  echo "temp" > "$MLAT_FLAG"
  exit 0
fi

# If we get to here, then everything worked out OK
"${s6wrap[@]}" echo "mlat-client initialization complete."
