#!/command/with-contenv bash
# shellcheck shell=bash disable=SC1091,SC2015,SC2145,SC2154

#---------------------------------------------------------------------------------------------
# Copyright (C) 2023-2024, Ramon F. Kolb (kx1t) and contributors
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
#---------------------------------------------------------------------------------------------

source /scripts/common

"${s6wrap[@]}" echo "Started as an s6 service"

MLAT_CMD="/usr/local/bin/mlat-client"
MLAT_FLAG="/run/mlat-down"

MLAT_INPUT_TYPE="${MLAT_INPUT_TYPE:-auto}"
MLAT_RESULTS="${MLAT_RESULTS:-beast,listen,30105}"

START_DELAY=10s

# Do some basic checks:
# Sleep forever if the initialization process found that MLAT cannot be started
if [[ -f ${MLAT_FLAG} ]] && [[ "$(<${MLAT_FLAG})" != "temp" ]]; then  stop_service; fi
# Sleep for 5 minutes if the issue is that the config is correct but the server is down
if [[ -f ${MLAT_FLAG} ]] && [[ "$(<${MLAT_FLAG})" == "temp" ]]
then
	if [[ $(timeout --preserve-status 10 netcat -z -v "${MLAT_SERVER%%:*}" "${MLAT_SERVER##*:}" 2>/dev/null ; echo $?) != "0" ]] \
  		|| [[ $(timeout --preserve-status 10 netcat -z -v "${MLAT_HOST%%:*}" "${MLAT_HOST##*:}" 2>/dev/null ; echo $?) != "0" ]]
	then
		"${s6wrap[@]}" echo "MLAT host or server is still down. Trying again in 5 minutes"
		sleep 5m
		exit 0
	fi
else
	rm -f "${MLAT_FLAG}"
fi

# update the MLAT_SERVER from the ZoneTable script:
source /home/zonetable

MLAT_PARAM=(--input-type "${MLAT_INPUT_TYPE}")
# MLAT_PARAM+=(--no-udp)
MLAT_PARAM+=(--input-connect "${MLAT_HOST}")
MLAT_PARAM+=(--server "${MLAT_SERVER}")
MLAT_PARAM+=(--lat "${LAT}")
MLAT_PARAM+=(--lon "${LON}")
MLAT_PARAM+=(--alt "${ALT}")
MLAT_PARAM+=(--results "${MLAT_RESULTS}")
MLAT_PARAM+=(--user "${FEEDER_KEY}")
MLAT_PARAM+=(--uuid "${FEEDER_KEY##*:}")
MLAT_PARAM+=("${PRIVATE_MLAT:+--privacy}")

sleep ${START_DELAY}

if chk_enabled "${VERBOSE}"; then
	"${s6wrap[@]}" echo "Starting MLAT with: ${MLAT_CMD} ${MLAT_PARAM[@]}"
	exec "${s6wrap[@]}" "${MLAT_CMD}" "${MLAT_PARAM[@]}"
else
	exec "${s6wrap[@]}" "${MLAT_CMD}" "${MLAT_PARAM[@]}"
fi
